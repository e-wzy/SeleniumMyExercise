Maven and testNG in IntelliJ
=====================
1. Create Maven  project
2. Add testNG to pom.xml
   way 1:
    put cursor on pom file -> go to Code -> generate->Dependency->Search For Artifact.
    key in testng -> add.
     wait a while, the dependency will be added.

    way 2: copy from Maven repository to pom file.
              do not work.   
    
refer to https://www.youtube.com/watch?v=PmpA8PtnXAk

3. Add "Run as TestNG" and report
  
  go to Run -> Edit configuration > + testNG-> Name : Run as TestNG
  -> Test kind: class ->Class: select class -> Listener -> Tick "Use default reporters".
  -> ok.
   
   "test-output"  will appear in project folder, which will store test reports.

4.  Create testng.xml - add plugin Create TestNG XML
    1) add plug in:
        go to Settings -> Select Plugins -> Search for  Create TestNG XML
        ->Add it and Tick it.
     2) right click project folder 
        Create TestNG XML
 
     Refer to the website: Automation Step by Step.
        
    3) Can run from the testNG XML file.
    
     4) to generate or update test report
        go to Run -> Edit Confiurations -> Listeners -> tick "Use default reporters". 
     
    5) can just re-run failed test cases
        run testng-failed.xml

  
5. Note: 1) to manually add dependency, go to "Project Structure" -> Modules.
        -> download jar files -> add them to the project.
         
        2) In Intelli J, type"sout" , System.out.println will pop up.

-----------------------------------------------------------
TestNG:

https://www.javatpoint.com/testng-tutorial

1) @BeforeTest and @AfterTest which have control over the particular folder 
2) @BeforeSuite and @AfterSuite have control over the entire framework.
3) @BeforeClass and The @AfterClass have control over current class.
4) @BeforeMethod and The @AfterMethod have control over each method in a class.
    if there are four methods, then the @BeforeMethod or  @AfterMethod  annotated method will be invoked four times

5) Annotation Attributes -  priority:  
   When no 'priority' attribute is specified then the TestNG will run the test cases in alphabetical order.
   When the priority is set, the lowest priority test case will run first and the highest priority test case will be executed last.
  e.g:  @Test(priority=2)  

6) Annotation Attributes -  timeout
   The timeOut is a time period provided to the test case to completely execute its test case, the test case is marked as fail when timeout happens. 
   e.g: @Test(timeOut=200)  

